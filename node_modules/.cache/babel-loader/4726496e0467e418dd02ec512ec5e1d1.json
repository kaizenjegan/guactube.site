{"ast":null,"code":"var _jsxFileName = \"/Users/jeganmatthews/softwareProjects/guactube2/app/ui/src/components/Movies/MovieDetails/player.tsx\";\nimport * as React from 'react';\nimport videojs from 'video.js'; // Styles\n\nimport 'video.js/dist/video-js.css';\nexport default class VideoPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.player = void 0;\n    this.videoNode = void 0;\n    this.player = undefined;\n    this.videoNode = undefined;\n  }\n\n  componentDidMount() {\n    // instantiate video.js\n    this.player = videojs(this.videoNode, this.props).ready(function () {// console.log('onPlayerReady', this);\n    });\n  } // destroy player on unmount\n\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  } // wrap the player in a div with a `data-vjs-player` attribute\n  // so videojs won't create additional wrapper in the DOM\n  // see https://github.com/videojs/video.js/pull/3856\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"c-player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"c-player__screen\",\n      \"data-vjs-player\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      ref: node => this.videoNode = node,\n      className: \"video-js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/jeganmatthews/softwareProjects/guactube2/app/ui/src/components/Movies/MovieDetails/player.tsx"],"names":["React","videojs","VideoPlayer","Component","constructor","props","player","videoNode","undefined","componentDidMount","ready","componentWillUnmount","dispose","render","node"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,UAApB,C,CAEA;;AACA,OAAO,4BAAP;AAMA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAIvDC,EAAAA,WAAW,CAACC,KAAD,EAAmC;AAC5C,UAAMA,KAAN;AAD4C,SAHtCC,MAGsC;AAAA,SAFtCC,SAEsC;AAE5C,SAAKD,MAAL,GAAcE,SAAd;AACA,SAAKD,SAAL,GAAiBC,SAAjB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB;AACA,SAAKH,MAAL,GAAcL,OAAO,CAAC,KAAKM,SAAN,EAAiB,KAAKF,KAAtB,CAAP,CAAoCK,KAApC,CAA0C,YAAW,CACjE;AACD,KAFa,CAAd;AAGD,GAhBsD,CAkBvD;;;AACAC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKL,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYM,OAAZ;AACD;AACF,GAvBsD,CAyBvD;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,yBAAgB,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAGC,IAAD,IAA4B,KAAKP,SAAL,GAAiBO,IAAzD;AAA+D,MAAA,SAAS,EAAC,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAWD;;AAxCsD","sourcesContent":["import * as React from 'react';\nimport videojs from 'video.js';\n\n// Styles\nimport 'video.js/dist/video-js.css';\n\ninterface VideoPlayerPropsInferface {\n  videoJsOptions: videojs.PlayerOptions;\n}\n\nexport default class VideoPlayer extends React.Component {\n  private player?: videojs.Player;\n  private videoNode?: HTMLVideoElement;\n\n  constructor(props: VideoPlayerPropsInferface) {\n    super(props);\n    this.player = undefined;\n    this.videoNode = undefined;\n  }\n\n  componentDidMount() {\n\n    // instantiate video.js\n    this.player = videojs(this.videoNode, this.props).ready(function() {\n      // console.log('onPlayerReady', this);\n    });\n  }\n\n  // destroy player on unmount\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  // wrap the player in a div with a `data-vjs-player` attribute\n  // so videojs won't create additional wrapper in the DOM\n  // see https://github.com/videojs/video.js/pull/3856\n  render() {\n    return (\n      <div className=\"c-player\">\n        <div className=\"c-player__screen\" data-vjs-player=\"true\">\n          <video ref={(node: HTMLVideoElement) => this.videoNode = node} className=\"video-js\" />\n        </div>\n        {/* <div className=\"c-player__controls\">\n          <button>Play</button>\n          <button>Pause</button>\n        </div> */}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}